# -*- coding: utf-8 -*-
"""telegrambot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19FSCL5Nm1AAe4d0WXyf-UVCPoh4P9nOA
"""

!pip install python-telegram-bot --upgrade

import time
import random
from telegram.ext import Updater
from telegram.ext import MessageHandler, Filters
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler
from telegram import InlineKeyboardMarkup, InlineKeyboardButton
talk = ['楷傑好電', '好電好電的陳楷傑', '李奕杰好電', '好電好電的李奕杰']

# ...
TOKEN = "1492019937:AAEHpNpQsiZ_k7x0OMOiaLBozgDLZrHxISE"
updater = Updater(token=TOKEN, use_context=True)

dispatcher = updater.dispatcher

def start(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text="I'm a bot, please talk to me!")

def play(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text="來")
    context.bot.send_message(chat_id=update.effective_chat.id,text='我們可以', reply_markup = InlineKeyboardMarkup([[InlineKeyboardButton(text = '算數學', callback_data = 'math'), InlineKeyboardButton(text='剪刀石頭布', callback_data = 'Rock_Paper_Scissors')]]))

def answer(bot, update):
    if update.callback_query.data == 'math':
        context.bot.send_message(chat_id=update.effective_chat.id, text='哈')
        update.callback_query.edit_message_text('＠ephmeronephiphany好電')
    else:
        update.callback_query.edit_message_text('哈哈我還沒做')

# ...
def echo(update, context):
    import logging
    logging.info("Got message " + update.message.text)
    i = random.randint(0,len(talk))
    if i == 5:
      context.bot.send_message(chat_id=update.effective_chat.id, text=update.message.text + "電")
    else:
      context.bot.send_message(chat_id=update.effective_chat.id, text=talk[i])
def fight(update, context):
    text_fight = '打架打起來！'
    context.bot.send_message(chat_id=update.effective_chat.id, text=text_fight)

def add(update, context):
    talk.append(update.message.text.replace('/add',''))
    context.bot.send_message(chat_id=update.effective_chat.id, text = update.message.text.replace('/add','')+'已加入')

def team(update, context):
    from random import shuffle
    n = 42
    people = []
    for i in range(n):
      people.append(i+1)
   
    shuffle(people)
   
    r = n//4
    for i in range(r):
      if len(people) == 0:
          break
      if i == 0 or i == 1:
          context.bot.send_message(chat_id=update.effective_chat.id, text = str(i+1)+': '+str(people[5])+', '+str(people[1])+', '+str(people[2])+', '+str(people[3])+', '+str(people[4])+', '+str(people[0]))
          for j in range(6):
            people.pop(0)
          continue
      context.bot.send_message(chat_id=update.effective_chat.id, text = str(i+1)+': '+str(people[1])+', '+str(people[2])+', '+str(people[3])+', '+str(people[4])+', '+str(people[0]))
      for j in range(5):
         people.pop(0)
hands = ['rock', 'paper', 'scissors']

emoji = {
    'rock': '👊',
    'paper': '✋',
    'scissors': '✌️'
} 

def play(bot, update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text='cool')
    update.message.reply_text('剪刀石頭布！',reply_markup = InlineKeyboardMarkup([[InlineKeyboardButton(emoji, callback_data = hands) for hands, emoji in emoji.items()]]))

def judge(mine, yours):
    if mine == yours:
        return '平手'
    elif (hands.index(mine) - hands.index(yours)) % 3 == 1:
        return '我贏了'
    else:
        return '我輸了'

def answer(bot, update):
    try:
        mine = random.choice(hands)
        yours = update.callback_query.data
        update.callback_query.edit_message_text('我出{}，你出{}，{}！'.format(emoji[mine], emoji[yours], judge(mine, yours)))
    except Exception as e:
        print(e)


play_handler = CommandHandler('play', play)
dispatcher.add_handler(play_handler)

dispatcher.add_handler(CallbackQueryHandler(answer))

#updater.bot.send_message(chat_id=1774218222, text="來打架")

start_handler = CommandHandler('start', start)
dispatcher.add_handler(start_handler)

echo_handler = MessageHandler(Filters.text & (~Filters.command), echo)
dispatcher.add_handler(echo_handler)

fight_handler = CommandHandler('fight', fight)#槓槓
dispatcher.add_handler(fight_handler)

add_handler = CommandHandler('add', add)
dispatcher.add_handler(add_handler)

team_handler = CommandHandler('team', team)
dispatcher.add_handler(team_handler)

play_handler = CommandHandler('play', play)
dispatcher.add_handler(play_handler)

dispatcher.add_handler(CallbackQueryHandler(answer))



updater.start_polling()